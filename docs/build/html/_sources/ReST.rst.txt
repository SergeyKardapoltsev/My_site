Синтаксис разметки reStructuredText
===================================

===================================

Структуру и оформление текстов для этого сайта я создавал с помощью
облегчённого языка разметки ReST. Напомню, что документы с разметкой ReST
– обычные текстовые файлы. Все вносимые изменения в такие файлы можно
отслеживать с помощью Git.

В этом разделе указаны те элементы синтаксиса ReST, которые я применил
при создании проекта. Ознакомиться с другими его возможностями можно,
например, на `этом сайте`_ и `здесь`_.

В ReST отступы и пробелы имеют важное значение для команд разметки,
но не имеют значения внутри текста (несколько пробелов будут отображаться
как один). В командах ReST используется символ обратной кавычки «`».
Использование обычных одинарных кавычек в командах не привёдет к желаемым
результатам.

Заголовки
---------

ReST поддерживает несколько уровней заголовков. Заголовки первого уровня
подчёркиваются символом равно ``=``. Заголовки второго уровня подчёркиваются
символом короткого тире или минуса ``-``. Заголовки третьего уровня
подчёркиваются символом тильды ``~``. Для параграфов можно
использовать подчёркивание символами двойных кавычек ``"``.

Заголовки можно отбить строкой с помощью символов::

    = ` : ' " ~ ^ _ * + # < >

.. code-block::

    Заголовок 1 уровня
    ==================

    Заголовок 2 уровня
    ------------------

    Заголовок 3 уровня
    ~~~~~~~~~~~~~~~~~~

    Заголовок 4 уровня
    """"""""""""""""""

Абзацы
------

Абзацы в ReST отделяются друг от друга пустой строкой:

.. code-block::

    Это первый абзац.

    А это второй абзац.

Начертание текста
-----------------

Чтобы сделать текст **жирным**, нужно обособить его двумя символами
звёздочек с каждой стороны:

.. code-block::

    **жирный текст**

Чтобы сделать текст *курсивным*, нужно обособить его символами
звёздочек – по одному символу с каждой стороны:

.. code-block::

    *курсивный текст*

.. attention::

    Пробелы между выделяемым словом и звёздочкой ставить нельзя.
    Варианты ``** так **``, ``** так**`` или ``*так *`` не дадут
    нужного результата.

Списки
------

Списки могут быть нумерованными, автонумерованными, маркированными и
вложенными.

Нумерованные списки создаются с помощью символа числа с точкой:

.. code-block::

    1. Первый элемент списка
    2. Второй элемент списка
    ...
    10. Десятый элемент списка

Результат:

1. Первый элемент списка
2. Второй элемент списка

...

10. Десятый элемент списка

Автонумерованные списки создаются с помощью символа решётки с точкой:

.. code-block::

    #. Один
    #. Два
    #. Три

Результат:

#. Один
#. Два
#. Три

Маркированные списки создаются с помощью символа звёздочки или дефиса.
Пробелы после символа обязательны:

.. code-block::

    * один
    * два

    или

    - один
    - два

Результат:

* один
* два

или

- один
- два

Вложенные списки создаются с помощью отсутпов:

.. code-block::

    * Первый уровень
        * Второй уровень
            * Третий уровень

    или

    #. Один
        * Маркер
    #. Два
        #. Номер

Результат:

* Первый уровень
    * Второй уровень
        * Третий уровень

или

#. Один
    * Маркер
#. Два
    #. Номер

Исходный код и блоки кода
-------------------------




.. note:: Раздел не завершён и находится в процессе доработки.



.. _этом сайте: https://www.sphinx-doc.org/en/master/usage/restructuredtext/basics.html

.. _здесь: https://helpbook.readthedocs.io/ru/latest/cat/syntax.html